# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
indent_style = space
# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 2
insert_final_newline = true
charset = utf-8-bom
tab_width=2
###############################
# .NET Coding Conventions     #
###############################
[*.cs] 
# Organize usings 
dotnet_sort_system_directives_first = true 
# this. preferences 
dotnet_style_qualification_for_field = false:silent 
dotnet_style_qualification_for_property = false:silent 
dotnet_style_qualification_for_method = false:silent 
dotnet_style_qualification_for_event = false:silent 
# Language keywords vs BCL types preferences 
dotnet_style_predefined_type_for_locals_parameters_members = true:silent 
dotnet_style_predefined_type_for_member_access = true:silent 
# Parentheses preferences 
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent 
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent 
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent 
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent 
# Modifier preferences 
dotnet_style_require_accessibility_modifiers = for_non_interface_members:error 
dotnet_style_readonly_field = true:suggestion 
# Expression-level preferences 
dotnet_style_object_initializer = true:suggestion 
dotnet_style_collection_initializer = true:suggestion 
dotnet_style_explicit_tuple_names = true:suggestion 
dotnet_style_null_propagation = true:suggestion 
dotnet_style_coalesce_expression = true:suggestion 
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent 
dotnet_prefer_inferred_tuple_names = true:suggestion 
dotnet_prefer_inferred_anonymous_type_member_names = true:suggestion 
dotnet_style_prefer_auto_properties = true:silent 
dotnet_style_prefer_conditional_expression_over_assignment = true:silent 
dotnet_style_prefer_conditional_expression_over_return = true:silent 
# INTERFACE
dotnet_naming_rule.interface_rule.severity                         = error 
dotnet_naming_rule.interface_rule.symbols                          = interface_symbols 
dotnet_naming_rule.interface_rule.style                            = interface_style
dotnet_naming_symbols.interface_symbols.applicable_kinds           = interface 
dotnet_naming_symbols.interface_symbols.applicable_accessibilities = * 
dotnet_naming_style.interface_style.capitalization                 = pascal_case 
dotnet_naming_style.interface_style.required_prefix                = I
# CONSTANTS
dotnet_naming_rule.constant_rule.severity                         = error 
dotnet_naming_rule.constant_rule.symbols                          = constant_symbols 
dotnet_naming_rule.constant_rule.style                            = constant_style
dotnet_naming_symbols.constant_symbols.applicable_kinds           = field 
dotnet_naming_symbols.constant_symbols.applicable_accessibilities = * 
dotnet_naming_symbols.constant_symbols.required_modifiers         = const 
dotnet_naming_style.constant_style.capitalization                 = pascal_case 
# FIELDS
dotnet_naming_rule.field_rule.severity                         = error 
dotnet_naming_rule.field_rule.symbols                          = field_symbols 
dotnet_naming_rule.field_rule.style                            = field_style
dotnet_naming_symbols.field_symbols.applicable_kinds           = field 
dotnet_naming_symbols.field_symbols.applicable_accessibilities = private, protected
dotnet_naming_style.field_style.capitalization                 = pascal_case
dotnet_naming_style.field_style.required_prefix                = f
# ASYNC METHODS
dotnet_naming_rule.async_method_rule.severity                         = error 
dotnet_naming_rule.async_method_rule.symbols                          = async_method_symbols 
dotnet_naming_rule.async_method_rule.style                            = async_method_style
dotnet_naming_symbols.async_method_symbols.applicable_kinds           = method 
dotnet_naming_symbols.async_method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.async_method_symbols.required_modifiers         = async
dotnet_naming_style.async_method_style.capitalization                 = pascal_case 
dotnet_naming_style.async_method_style.required_suffix                = Async
# var preferences 
csharp_style_var_for_built_in_types = false:silent 
csharp_style_var_when_type_is_apparent = true:silent 
csharp_style_var_elsewhere = true:silent 
# Expression-bodied members 
csharp_style_expression_bodied_methods = false:suggestion 
csharp_style_expression_bodied_constructors = false:suggestion 
csharp_style_expression_bodied_operators = false:suggestion 
csharp_style_expression_bodied_properties = true:suggestion 
csharp_style_expression_bodied_indexers = true:suggestion 
csharp_style_expression_bodied_accessors = true:suggestion 
# Pattern matching preferences 
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion 
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion 
# Null-checking preferences 
csharp_style_throw_expression = true:suggestion 
csharp_style_conditional_delegate_call = true:suggestion 
# Modifier preferences 
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion 
# Expression-level preferences 
csharp_prefer_braces = false:silent 
csharp_style_deconstructed_variable_declaration = true:suggestion 
csharp_prefer_simple_default_expression = true:suggestion 
csharp_style_pattern_local_over_anonymous_function = true:suggestion 
csharp_style_inlined_variable_declaration = true:suggestion 
############################### 
# C# Formatting Rules         # 
############################### 
# New line preferences 
csharp_new_line_before_open_brace = all 
csharp_new_line_before_else = true 
csharp_new_line_before_catch = true 
csharp_new_line_before_finally = true 
csharp_new_line_before_members_in_object_initializers = true 
csharp_new_line_before_members_in_anonymous_types = true 
csharp_new_line_between_query_expression_clauses = true 
# Indentation preferences 
csharp_indent_case_contents = true 
csharp_indent_switch_labels = true 
csharp_indent_labels = flush_left 
# Space preferences 
csharp_space_after_cast = false 
csharp_space_after_keywords_in_control_flow_statements = true 
csharp_space_between_method_call_parameter_list_parentheses = false 
csharp_space_between_method_declaration_parameter_list_parentheses = false 
csharp_space_between_parentheses = false 
csharp_space_before_colon_in_inheritance_clause = false 
csharp_space_after_colon_in_inheritance_clause = true 
csharp_space_around_binary_operators = before_and_after 
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false 
csharp_space_between_method_call_name_and_opening_parenthesis = false 
csharp_space_between_method_call_empty_parameter_list_parentheses = false 
# Wrapping preferences 
csharp_preserve_single_line_statements = false 
csharp_preserve_single_line_blocks = true
# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = none
# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none
# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = none
# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement = true:none